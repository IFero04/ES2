@page "/detalhes-evento/{id}"
@using BusinessLogic.Models
@using BusinessLogic.Services
@using BusinessLogic.Entities
@inject HttpClient Http
@inject IAtividadeService ServiceAtividade
@inject IEventoService ServiceEvento
@inject NavigationManager NavigationManager

<h3>Detalhes do Evento (Organizador)</h3>

@if (_evento == null)
{
    <p>
        <em>Evento não encontrado... @Id</em>
    </p>
}
else
{
    <div class="evento-details">
        <h4>@_evento.Nome</h4>
        <p>Data: @_evento.Data.ToShortDateString()</p>
        <p>Hora: @_evento.Hora</p>
        <p>Local: @_evento.Local</p>
        <p>Categoria: @_evento.Categoria</p>
        <p>Capacidade: @_evento.Capacidade</p>
        <p>Número de Atividades: @_evento.NumeroAtidades</p>
        <p>Ingresso Barato: @_evento.IngressoBarato</p>
        <p>Participantes Inscritos: @_evento.ParticipantesInscritos</p>
    </div>

    <h4>Atividades do Evento</h4>
    @if (_evento.Atividades != null && _evento.Atividades.Any())
    {
        <div class="eventos-container">
            @foreach (var atividade in _evento.Atividades)
            {
                <div class="evento-card">
                    <h5>@atividade.Nome</h5>
                    <p>@atividade.Data</p>
                    <p>@atividade.Hora</p>
                    <p>@atividade.Descricao</p>
                    <button class="btn btn-primary" @onclick="() => ListarParticipantes(atividade.Id)">Listar Participantes</button>
                    <button class="btn btn-primary" @onclick="() => EditarAtividade(atividade.Id)">Editar Atividade</button>
                    <button class="btn btn-danger" @onclick="() => RemoverAtividade(atividade)">Remover Atividade</button>
                </div>
            }
        </div>
    }
    else
    {
        <p>
            <em>Nenhuma atividade encontrada para este evento.</em>
        </p>
    }

    <button class="btn btn-success" @onclick="() => AdicionarAtividade(_evento.Id)">Adicionar Atividade</button>
    
    
    <h4>Ingressos do Evento</h4>
    @if (_evento.Ingressos != null && _evento.Ingressos.Any())
    {
        <ul>
            @foreach (var ingresso in _evento.Ingressos)
            {
                <h5>@ingresso.Nome</h5>
                <li>Preço: @ingresso.Preco</li>
                <li>Quantidade: @ingresso.Quantidade</li>
                <li>Ingressos Comprados: @ingresso.IngressosComprados</li>
                <p></p>
            }
        </ul>
    }

    <button class="btn btn-primary" @onclick="EditarEvento">Editar Evento</button>
    <button class="btn btn-danger" @onclick="EliminarEvento">Remover Evento</button>
}

<style>
    .evento-details {
        border: 1px solid #ccc;
        padding: 10px;
    }
</style>

@code {
    private EventoDetailsModel? _evento;

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            _evento = await Http.GetFromJsonAsync<EventoDetailsModel>($"http://localhost:5052/api/Evento/Detalhe/{Guid.Parse(Id)}");
        }
    }

    private void AdicionarAtividade(Guid idEvento)
    {
        if (_evento!.NumeroAtidades <= 5) NavigationManager.NavigateTo($"/criar-atividade/{idEvento}");
        
        else Console.WriteLine("Ja atingiu o limete de 5 atividades");
    }

    private async Task RemoverAtividade(AtividadeDetalheModel atividade)
    {
        bool response = await ServiceAtividade.RemoverAtividade(atividade.Id);

        if (response) _evento!.Atividades!.Remove(atividade);
    }

    private void EditarAtividade(Guid idAtividade)
    {
        NavigationManager.NavigateTo($"/EditarAtividade/{idAtividade.ToString()}");
    }

    private void EditarEvento()
    {
        NavigationManager.NavigateTo($"/EditarEvento/{Id}");
    }

    private async Task EliminarEvento()
    {
        UtilizadorDetalheModel utilizador = _evento!.Organizador!;
        
        bool response = await ServiceEvento.RemoverEvento(Guid.Parse(Id));

        if (response) NavigationManager.NavigateTo($"/eventos/{utilizador.Id}");
    }

    private void ListarParticipantes(Guid idAtividade)
    {
        NavigationManager.NavigateTo($"/ListarParticipantes/{idAtividade}");
    }
}


<style>
    .eventos-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .evento-card {
        border: 1px solid #ccc;
        padding: 10px;
    }

    .btn-acessar-evento {
        margin-top: 10px;
    }
</style>